name: Remio Home Docker Image CI
on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"

  workflow_dispatch:
    inputs:
      push:
        description: push
        required: true
        default: true
        type: boolean
      restart:
        description: Redeploy
        required: false
        default: false
        type: boolean

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_REPO }}
            ${{ secrets.ALI_DOCKER_REPO }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Git Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALI_DOCKER_REPO }}
          username: ${{ secrets.ALI_DOCKER_USERNAME }}
          password: ${{ secrets.ALI_DOCKER_PASSWORD }}
      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          push: ${{ github.event_name != 'workflow_dispatch' || inputs.push }}
          platforms: |
            linux/arm64
            linux/amd64
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
  pull-and-restart:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.restart }}
    steps:
      - name: Login Server and Start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /opt/apps/remio-home/
            docker-compose pull remio-home && docker-compose up -d remio-home
            docker rmi $(docker image ls ${{ secrets.DOCKERHUB_REPO }} -q) || echo "删除镜像异常"
